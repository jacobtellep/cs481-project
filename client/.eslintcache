[{"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\index.js":"1","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\App.js":"2","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Logout.js":"3","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\NavBar.js":"4","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\DailyJobReport.js":"5","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ProtectedRoute.js":"6","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Login.js":"7","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Pricing.js":"8","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewPricing.js":"9","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\JSAform.js":"10","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetJSAform.js":"11","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\InspectionForm.js":"12","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetInspectionForm.js":"13","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\CreateForm.js":"14","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetDailyJobReport.js":"15","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Forms.js":"16","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewForm.js":"17","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Loading.js":"18","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LogoutButton.js":"19","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LoginButton.js":"20","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\DataSent.js":"21","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\BackButton.js":"22","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\WrongPermissions.js":"23"},{"size":448,"mtime":1617676797461,"results":"24","hashOfConfig":"25"},{"size":2916,"mtime":1617759541543,"results":"26","hashOfConfig":"25"},{"size":390,"mtime":1617759485598,"results":"27","hashOfConfig":"25"},{"size":798,"mtime":1617681402815,"results":"28","hashOfConfig":"25"},{"size":27971,"mtime":1617850960692,"results":"29","hashOfConfig":"25"},{"size":402,"mtime":1617676797460,"results":"30","hashOfConfig":"25"},{"size":162,"mtime":1617676797457,"results":"31","hashOfConfig":"25"},{"size":2932,"mtime":1617850674771,"results":"32","hashOfConfig":"25"},{"size":2282,"mtime":1617845249043,"results":"33","hashOfConfig":"25"},{"size":40305,"mtime":1617851133479,"results":"34","hashOfConfig":"25"},{"size":18564,"mtime":1617844606479,"results":"35","hashOfConfig":"25"},{"size":47310,"mtime":1617851064660,"results":"36","hashOfConfig":"25"},{"size":20694,"mtime":1617844542767,"results":"37","hashOfConfig":"25"},{"size":1917,"mtime":1617683732634,"results":"38","hashOfConfig":"25"},{"size":11235,"mtime":1617844481534,"results":"39","hashOfConfig":"25"},{"size":2393,"mtime":1617758340131,"results":"40","hashOfConfig":"25"},{"size":1704,"mtime":1617755653848,"results":"41","hashOfConfig":"25"},{"size":280,"mtime":1617681697687,"results":"42","hashOfConfig":"25"},{"size":393,"mtime":1617676797459,"results":"43","hashOfConfig":"25"},{"size":376,"mtime":1617676797458,"results":"44","hashOfConfig":"25"},{"size":331,"mtime":1617759606196,"results":"45","hashOfConfig":"25"},{"size":361,"mtime":1617683740352,"results":"46","hashOfConfig":"25"},{"size":375,"mtime":1617758603935,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1sq99px",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\index.js",[],["103","104"],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\App.js",["105"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport DailyJobReport from './components/DailyJobReport';\r\nimport GetDailyJobReport from './components/GetDailyJobReport';\r\nimport NavBar from './components/NavBar';\r\nimport Forms from './components/Forms';\r\nimport CreateForm from './components/CreateForm';\r\nimport ViewForm from './components/ViewForm';\r\nimport Logout from './components/Logout';\r\nimport Login from './components/Login';\r\nimport Pricing from './components/Pricing';\r\nimport ViewPricing from './components/ViewPricing';\r\nimport JSAform from './components/JSAform';\r\nimport GetJSAform from './components/GetJSAform';\r\nimport Inspection from './components/InspectionForm';\r\nimport GetInspection from './components/GetInspectionForm';\r\nimport DataSent from './components/DataSent';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Loading from './components/Loading';\r\nimport WrongPermissions from './components/WrongPermissions';\r\nimport logo from './HGCARTE.jpg';\r\n\r\nconst App = () => {\r\n  const { isLoading } = useAuth0();\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <ProtectedRoute\r\n            path=\"/createdailyjobreport\"\r\n            component={DailyJobReport}\r\n          />\r\n          <ProtectedRoute\r\n            path=\"/getdailyjobreport\"\r\n            component={GetDailyJobReport}\r\n          />\r\n          <ProtectedRoute path=\"/createjobsafetyanalysis\" component={JSAform} />\r\n          <ProtectedRoute path=\"/getjobsafetyanalysis\" component={GetJSAform} />\r\n          <ProtectedRoute path=\"/createinspection\" component={Inspection} />\r\n          <ProtectedRoute path=\"/getinspection\" component={GetInspection} />\r\n          <ProtectedRoute path=\"/forms\" exact component={Forms} />\r\n          <ProtectedRoute path=\"/createform\" component={CreateForm} />\r\n          <ProtectedRoute path=\"/viewform\" component={ViewForm} />\r\n          <ProtectedRoute path=\"/pricing\" component={Pricing} />\r\n          <ProtectedRoute path=\"/viewpricing\" component={ViewPricing} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <ProtectedRoute path=\"/datasent\" component={DataSent} />\r\n          <ProtectedRoute\r\n            path=\"/wrongpermissions\"\r\n            component={WrongPermissions}\r\n          />\r\n          <Route path=\"/\" exact>\r\n            <img\r\n              style={{\r\n                marginTop: '10px',\r\n                position: 'absolute',\r\n                left: '50%',\r\n                marginLeft: '-75px',\r\n                width: '200px',\r\n              }}\r\n              src={logo}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Logout.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\NavBar.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\DailyJobReport.js",["106","107","108","109","110","111","112"],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Login.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Pricing.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewPricing.js",["113","114","115","116"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ViewPricing = () => {\r\n  const [selectValue, setSelectValue] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n\r\n  const getPricing = () => {\r\n    axios\r\n      .get('http://localhost:5000/viewpricing', {\r\n        params: { partGroup: selectValue },\r\n      })\r\n      .then((response) => {\r\n        setPricing(response.data);\r\n\r\n        console.log(response.data);\r\n        console.log('successfully retrieved the data');\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}>\r\n      <h1>Material Pricing</h1>\r\n      <div\r\n        className=\"border\"\r\n        style={{\r\n          display: 'flex',\r\n          marginLeft: '10px',\r\n          marginRight: '10px',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          width: '700px',\r\n        }}>\r\n        <b>Select Part Group</b>\r\n        <select\r\n          className=\"ui select\"\r\n          style={{\r\n            marginTop: '10px',\r\n            marginLeft: '10px',\r\n            color: 'black',\r\n            backgroundColor: 'white',\r\n            width: '150px',\r\n            border: '2px solid black',\r\n            borderRadius: '4px',\r\n          }}\r\n          value={selectValue}\r\n          onChange={handleChange}>\r\n          <option selected=\"selected\"> Select Part Group</option>\r\n          <option value=\"arrestor\">Arrestor</option>\r\n          <option value=\"bolts_nuts_screws\">Bolt, Nut, Screw</option>\r\n          <option value=\"breakers\">Breaker</option>\r\n        </select>\r\n        <button\r\n          style={{\r\n            color: 'black',\r\n            backgroundColor: 'peachpuff',\r\n            width: '100px',\r\n            margin: '10px',\r\n            marginLeft: '10px',\r\n            border: '2px solid black',\r\n          }}\r\n          onClick={getPricing}\r\n          className=\"ui button\"\r\n          type=\"button\">\r\n          Retrieve\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPricing;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\JSAform.js",["117","118","119","120","121","122"],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetJSAform.js",["123","124","125","126","127","128"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport BackButton from './BackButton';\r\n\r\nclass GetJSAform extends React.Component {\r\n  state = {\r\n    ticket_num: '',\r\n    date: '',\r\n    company: '',\r\n    representative: '',\r\n    location: '',\r\n    well_num: '',\r\n    afe_num: '',\r\n    weahter: '',\r\n    jsa_current_temp: '',\r\n    weather_sun: 'false',\r\n    weather_rain: 'false',\r\n    weather_overcast: 'false',\r\n    weather_windy: 'false',\r\n    weather_hail: 'false',\r\n    weather_snow: 'false',\r\n    major_steps1: '',\r\n    major_steps2: '',\r\n    major_steps3: '',\r\n    major_steps4: '',\r\n    major_steps5: '',\r\n    major_steps6: '',\r\n    major_steps7: '',\r\n    potential_hazards1: '',\r\n    potential_hazards2: '',\r\n    potential_hazards3: '',\r\n    potential_hazards4: '',\r\n    potential_hazards5: '',\r\n    potential_hazards6: '',\r\n    potential_hazards7: '',\r\n    recommendations1: '',\r\n    recommendations2: '',\r\n    recommendations3: '',\r\n    recommendations4: '',\r\n    recommendations5: '',\r\n    recommendations6: '',\r\n    recommendations7: '',\r\n    emergencyAddress: '',\r\n    medicalFacility: '',\r\n    hazard_1: '',\r\n    hazard_2: '',\r\n    hazard_3: '',\r\n    hazard_confinedSpace: 'false',\r\n    hazard_fall: 'false',\r\n    hazard_sharp: 'false',\r\n    hazard_electric: 'false',\r\n    hazard_irritants: 'false',\r\n    hazard_extremes: 'false',\r\n    hazard_pinch_crush: 'false',\r\n    hazard_lifting: 'false',\r\n    hazard_shortService: 'false',\r\n    hazard_explosion: 'false',\r\n    hazard_energy: 'false',\r\n    hazard_stop: 'false',\r\n    hazard_elevated: 'false',\r\n    hazard_excavation: 'false',\r\n    hazard_chemical: 'false',\r\n    hazard_noise: 'false',\r\n    hazard_water: 'false',\r\n    print_name1: '',\r\n    employee_initals1: '',\r\n    print_name2: '',\r\n    employee_initals2: '',\r\n    print_name3: '',\r\n    employee_initals3: '',\r\n    print_name4: '',\r\n    employee_initals4: '',\r\n    print_name5: '',\r\n    employee_initals5: '',\r\n    print_name6: '',\r\n    employee_initals6: '',\r\n    print_name7: '',\r\n    employee_initals7: '',\r\n    print_name8: '',\r\n    employee_initals8: '',\r\n    print_name9: '',\r\n    employee_initals9: '',\r\n    print_name10: '',\r\n    employee_initals10: '',\r\n    ticket_numbers: [],\r\n    selectValue: '',\r\n  };\r\n\r\n  getjsaform = async () => {\r\n    const { getAccessTokenSilently } = this.props.auth0;\r\n    const token = await getAccessTokenSilently({\r\n      audience: 'http://localhost:5000/',\r\n      scope: 'view:forms',\r\n    });\r\n\r\n    axios\r\n      .get('http://localhost:5000/jsaform', {\r\n        params: { id: this.state.selectValue },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ GetJSAform: response.data }); // the auto-incremented sql id is included in this response.data object\r\n\r\n        console.log('successfully retrieved the data');\r\n      });\r\n  };\r\n\r\n  getjsaform_id = () => {\r\n    axios.get('http://localhost:5000/jsaform_ticket').then((response) => {\r\n      this.setState({ ticket_numbers: response.data }); // the auto-incremented sql id is included in this response.data object\r\n\r\n      console.log('successfully retrieved the data');\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', this.getjsaform_id());\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  };\r\n\r\n  retrieveClick = () => {\r\n    this.getjsaform(this.state.GetJSAform);\r\n  };\r\n\r\n  render() {\r\n    const renderDrop = () => {\r\n      return (\r\n        <select\r\n          className=\"ui select\"\r\n          style={{\r\n            marginLeft: '10px',\r\n            color: 'black',\r\n            backgroundColor: 'white',\r\n            width: '100px',\r\n            border: '2px solid black',\r\n            borderRadius: '4px',\r\n          }}\r\n          value={this.state.selectValue}\r\n          onChange={this.handleChange}>\r\n          {this.state.ticket_numbers.map((str) => (\r\n            <option value={str.ticket_num}>{str.ticket_num}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <div>\r\n          <BackButton path=\"viewform\" />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}>\r\n          <h1>View Job Safety Analysis Form</h1>\r\n          <div\r\n            className=\"border\"\r\n            style={{\r\n              display: 'flex',\r\n              marginLeft: '10px',\r\n              marginRight: '10px',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              width: '700px',\r\n            }}>\r\n            <b>Select Ticket Number</b>\r\n            {renderDrop()}\r\n            <button\r\n              style={{\r\n                color: 'black',\r\n                backgroundColor: 'peachpuff',\r\n                width: '100px',\r\n                margin: '10px',\r\n                border: '2px solid black',\r\n              }}\r\n              onClick={this.getjsaform}\r\n              className=\"ui button\"\r\n              type=\"button\">\r\n              Retrieve\r\n            </button>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          <br />\r\n\r\n          {/* && operator, kind of like using an if statement, will ignore any null values and stills render */}\r\n          {this.state.GetJSAform &&\r\n            this.state.GetJSAform.map((value, index) => {\r\n              /* Created variables to help format and split*/\r\n              const weather = value.weather_id.split('\\n');\r\n\r\n              const hazard_1 = value.hazard_1.split('\\n');\r\n              const hazard_2 = value.hazard_2.split('\\n');\r\n              const hazard_3 = value.hazard_3.split('\\n');\r\n\r\n              const majorSteps = value.major_steps;\r\n              const potentialHazard = value.potential_hazard;\r\n              const recommHazard = value.remove_hazard;\r\n\r\n              const employeeName = value.user_id;\r\n              const employeeInitals = value.signatures;\r\n\r\n              const date = value.proj_date.substring(0, 10);\r\n\r\n              return (\r\n                <div\r\n                  style={{ width: '700px' }}\r\n                  className=\"retrieve-report border\"\r\n                  key={index}>\r\n                  <h1>JSA Form</h1>\r\n\r\n                  <h3>Job Info</h3>\r\n                  <div\r\n                    className=\"jsa-info-weather sub-border\"\r\n                    style={{ display: 'flex', flexDirection: 'row' }}>\r\n                    <div style={{ marginLeft: '10px' }}>\r\n                      <div>\r\n                        <b>Ticket Number: </b>\r\n                        {value.ticket_num}\r\n                      </div>\r\n                      <div>\r\n                        <b>Date: </b>\r\n                        {date}\r\n                      </div>\r\n                      <div>\r\n                        <b>Company: </b>\r\n                        {value.company}\r\n                      </div>\r\n                      <div>\r\n                        <b>representative: </b>\r\n                        {value.representative}\r\n                      </div>\r\n                      <div>\r\n                        <b>location: </b>\r\n                        {value.location}\r\n                      </div>\r\n                      <div>\r\n                        <b>Well Number: </b>\r\n                        {value.well_num}\r\n                      </div>\r\n                      <div>\r\n                        <b>AFE Number: </b>\r\n                        {value.afe_num}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        paddingLeft: '100px',\r\n                      }}>\r\n                      {weather.map((str) => {\r\n                        if (String(str).toLowerCase() == 'true')\r\n                          return (\r\n                            <div style={{ paddingBottom: '1px' }}>\r\n                              {' '}\r\n                              <input type=\"checkbox\" checked={true} />\r\n                            </div>\r\n                          );\r\n                        else if (\r\n                          String(str).toLowerCase() == 'true' ||\r\n                          String(str).toLowerCase() != 'false'\r\n                        )\r\n                          return (\r\n                            <div style={{ paddingBottom: '1px' }}> {str}</div>\r\n                          );\r\n                        return (\r\n                          <div style={{ paddingBottom: '1px' }}>\r\n                            {' '}\r\n                            <input type=\"checkbox\" checked={false} />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                      <div>Sun</div>\r\n                      <div>Rain</div>\r\n                      <div>Overcast</div>\r\n                      <div>Windy</div>\r\n                      <div>Hail</div>\r\n                      <div style={{ paddingBottom: '1px' }}>Snow</div>\r\n                      <div style={{ paddingTop: '3px' }}>F Temp</div>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <div className=\"jsa-gps-medical sub-border\">\r\n                    <div style={{ marginLeft: '10px' }}>\r\n                      <b>Medical Facility: </b>\r\n                      {value.gps_location}\r\n                    </div>\r\n                    <div style={{ marginLeft: '10px' }}>\r\n                      <b>Emergency Address GPS: </b>\r\n                      {value.emergency_address}\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <div className=\"sub-border\" style={{ paddingLeft: '10px' }}>\r\n                    <h3>Hazards</h3>\r\n                    <div\r\n                      className=\"hazardCheck\"\r\n                      style={{ display: 'flex', flexDirection: 'row' }}>\r\n                      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        {hazard_1.map((str) => {\r\n                          if (String(str).toLowerCase() == 'true')\r\n                            return (\r\n                              <div style={{ paddingBottom: '1px' }}>\r\n                                <input type=\"checkbox\" checked={true} />\r\n                              </div>\r\n                            );\r\n                          return (\r\n                            <div style={{ paddingBottom: '1px' }}>\r\n                              <input type=\"checkbox\" checked={false} />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <div>Confined Space</div>\r\n                        <div>Fall Protection</div>\r\n                        <div>Sharp/Hot/Cold Surfaces</div>\r\n                        <div>Electric Shock Hazard</div>\r\n                        <div>Irritants-Respiratory/Skin</div>\r\n                        <div>Environment Extremes</div>\r\n                      </div>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          paddingLeft: '20px',\r\n                        }}>\r\n                        {hazard_2.map((str) => {\r\n                          if (String(str).toLowerCase() == 'true')\r\n                            return (\r\n                              <div style={{ paddingBottom: '1px' }}>\r\n                                <input type=\"checkbox\" checked={true} />\r\n                              </div>\r\n                            );\r\n                          return (\r\n                            <div style={{ paddingBottom: '1px' }}>\r\n                              <input type=\"checkbox\" checked={false} />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                        <div>Pinch/Crush/Strike Hazard</div>\r\n                        <div>Lifting Hazard</div>\r\n                        <div>Short Services Employees</div>\r\n                        <div>Fore or Explosion Potential</div>\r\n                        <div>Potential Release of Energy</div>\r\n                        <div>\r\n                          We ALL have the right and obligation to STOP WORK if\r\n                          unsafe conditions or acts are present\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          position: 'relative',\r\n                        }}>\r\n                        {hazard_3.map((str) => {\r\n                          if (String(str).toLowerCase() == 'true')\r\n                            return (\r\n                              <div style={{ paddingBottom: '1px' }}>\r\n                                <input type=\"checkbox\" checked={true} />\r\n                              </div>\r\n                            );\r\n                          return (\r\n                            <div style={{ paddingBottom: '1px' }}>\r\n                              <input type=\"checkbox\" checked={false} />\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          position: 'relative',\r\n                        }}>\r\n                        <div>Elevated Work Load</div>\r\n                        <div>Excavation</div>\r\n                        <div>Hazardous Chemical Exposure</div>\r\n                        <div>High Noise Level</div>\r\n                        <div>Water or Drowning Hazard</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <div\r\n                    className=\"steps-Consquences-remove sub-border\"\r\n                    style={{\r\n                      display: 'flex',\r\n\r\n                      flexDirection: 'row',\r\n                      paddingLeft: '10px',\r\n                    }}>\r\n                    <div>\r\n                      <h3>Major Steps</h3>\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          paddingLeft: '20px',\r\n                        }}>\r\n                        {majorSteps.split('\\n').map((str) => (\r\n                          <p>\r\n                            {str}\r\n                            <hr></hr>\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: '20px' }}>\r\n                      <h3>Potential Hazards/Consquences</h3>\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          paddingLeft: '20px',\r\n                        }}>\r\n                        {potentialHazard.split('\\n').map((str) => (\r\n                          <p>\r\n                            {str}\r\n                            <hr></hr>\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: '20px' }}>\r\n                      <h3>Recommendations to Remove Hazard</h3>\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          paddingLeft: '20px',\r\n                        }}>\r\n                        {recommHazard.split('\\n').map((str) => (\r\n                          <p>\r\n                            {str}\r\n                            <hr></hr>\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <h3 className=\"sub-border\">\r\n                    All Contractors and/or Personnel must read and sign this JSA\r\n                    form to work on or around G L Services area of Operations.{' '}\r\n                    <br /> DO NOT sign this form if you have not read and FULLY\r\n                    understand the activities that G L Services is engaged in\r\n                    <br />\r\n                    and that you are participating in.\r\n                  </h3>\r\n\r\n                  <div\r\n                    className=\"employeesAndInitials sub-border\"\r\n                    style={{ display: 'flex', flexDirection: 'row' }}>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        paddingLeft: '20px',\r\n                      }}>\r\n                      <h3>Employee Name</h3>\r\n                      {employeeName.split('\\n').map((str) => (\r\n                        <p>\r\n                          {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        paddingLeft: '20px',\r\n                      }}>\r\n                      <h3>Employee Initals</h3>\r\n                      {employeeInitals.split('\\n').map((str) => (\r\n                        <p>\r\n                          {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth0(GetJSAform);\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\InspectionForm.js",["129","130","131","132","133","134"],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetInspectionForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\CreateForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetDailyJobReport.js",["135"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport './GetDailyJobReport.css';\r\nimport BackButton from './BackButton';\r\n\r\nclass GetDailyJobReport extends React.Component {\r\n  state = {\r\n    date: '',\r\n    customer: '',\r\n    project: '',\r\n    contractNumber: '',\r\n    foreman: '',\r\n    weatherNotes: '',\r\n    weatherStart: '',\r\n    weatherEnd: '',\r\n    weatherNotes1: '',\r\n    weatherStart1: '',\r\n    weatherEnd1: '',\r\n    weatherNotes2: '',\r\n    weatherStart2: '',\r\n    weatherEnd2: '',\r\n    weatherNotes3: '',\r\n    weatherStart3: '',\r\n    weatherEnd3: '',\r\n    projectNotes: '',\r\n    projectStart: '',\r\n    projectEnd: '',\r\n    projectNotes1: '',\r\n    projectStart1: '',\r\n    projectEnd1: '',\r\n    projectNotes2: '',\r\n    projectStart2: '',\r\n    projectEnd2: '',\r\n    projectNotes3: '',\r\n    projectStart3: '',\r\n    projectEnd3: '',\r\n    employeeName: '',\r\n    hours: '',\r\n    jobNumber: '',\r\n    employeeName1: '',\r\n    hours1: '',\r\n    jobNumber1: '',\r\n    employeeName2: '',\r\n    hours2: '',\r\n    jobNumber2: '',\r\n    employeeName3: '',\r\n    hours3: '',\r\n    jobNumber3: '',\r\n    employeeName4: '',\r\n    hours4: '',\r\n    jobNumber4: '',\r\n    employeeName5: '',\r\n    hours5: '',\r\n    jobNumber5: '',\r\n    employeeName6: '',\r\n    hours6: '',\r\n    jobNumber6: '',\r\n    employeeName7: '',\r\n    hours7: '',\r\n    jobNumber7: '',\r\n    jobDescription: '',\r\n    selectValue: '',\r\n    contract_nums: [],\r\n\r\n    dailyJobReport: [],\r\n  };\r\n\r\n  //same functions you created\r\n  getDailyJobReport = async () => {\r\n    const { getAccessTokenSilently } = this.props.auth0;\r\n    const token = await getAccessTokenSilently({\r\n      audience: 'http://localhost:5000/',\r\n      scope: 'view:forms',\r\n    });\r\n\r\n    axios\r\n      .get('http://localhost:5000/dailyjobreport', {\r\n        params: { id: this.state.selectValue },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ GetDailyJobReport: response.data }); // the auto-incremented sql id is included in this response.data object\r\n\r\n        console.log(response.data);\r\n        console.log('successfully retrieved the data');\r\n      });\r\n  };\r\n\r\n  getDailyJobReportID = () => {\r\n    axios.get('http://localhost:5000/dailyjobreport_id').then((response) => {\r\n      if (response && response.data)\r\n        this.setState({ contract_nums: response.data });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', this.getDailyJobReportID());\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  };\r\n\r\n  retrieveClick = () => {\r\n    this.getDailyJobReport(this.state.GetDailyJobReport);\r\n  };\r\n\r\n  render() {\r\n    const renderDrop = () => {\r\n      return (\r\n        <select\r\n          className=\"ui select\"\r\n          style={{\r\n            marginLeft: '10px',\r\n            color: 'black',\r\n            backgroundColor: 'white',\r\n            width: '100px',\r\n            border: '2px solid black',\r\n            borderRadius: '4px',\r\n          }}\r\n          value={this.state.selectValue}\r\n          onChange={this.handleChange}>\r\n          {this.state.contract_nums.map((str) => (\r\n            <option value={str.contract_number}>{str.contract_number}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <BackButton path=\"viewform\" />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}>\r\n          <h1> View Daily Job Report</h1>\r\n          <div\r\n            className=\"border\"\r\n            style={{\r\n              display: 'flex',\r\n              marginLeft: '10px',\r\n              marginRight: '10px',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              width: '700px',\r\n            }}>\r\n            <b>Select Contract Number</b>\r\n            {renderDrop()}\r\n\r\n            <button\r\n              onClick={this.getDailyJobReport}\r\n              className=\"ui button\"\r\n              type=\"button\"\r\n              style={{\r\n                color: 'black',\r\n                backgroundColor: 'peachpuff',\r\n                width: '100px',\r\n                margin: '10px',\r\n                border: '2px solid black',\r\n              }}>\r\n              Retrieve\r\n            </button>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n          <br />\r\n          {/* && operator, kind of like using an if statement, will ignore any null values and stills render */}\r\n          {this.state.GetDailyJobReport &&\r\n            this.state.GetDailyJobReport.map((value, index) => {\r\n              {\r\n                /* Created variables to help format and split*/\r\n              }\r\n              const weatherNotes = value.weather_delay_notes;\r\n              const weatherStart = value.weather_delay_start;\r\n              const weatherEnd = value.weather_delay_end;\r\n\r\n              const projectNotes = value.project_delay_notes;\r\n              const projectStart = value.project_delay_start;\r\n              const projectEnd = value.project_delay_end;\r\n\r\n              const employeeName = value.employee_name;\r\n              const employeeHours = value.hours;\r\n              const jobNum = value.job_number;\r\n\r\n              const date = value.date.substring(0, 10);\r\n\r\n              return (\r\n                <div\r\n                  style={{ backgroundColor: 'ghostwhite', width: '700px' }}\r\n                  className=\"retrieve-report border\"\r\n                  key={index}>\r\n                  <h1>Daily Job Report</h1>\r\n                  <div\r\n                    style={{\r\n                      paddingLeft: '10px',\r\n                      backgroundColor: 'white',\r\n                      paddingRight: '10px',\r\n                    }}\r\n                    className=\"sub-border\">\r\n                    <div>\r\n                      <b>Date:</b> <br></br> {date}\r\n                    </div>\r\n                    <div>\r\n                      <b>Customer:</b>\r\n                      <br></br> {value.customer}\r\n                    </div>\r\n                    <div>\r\n                      <b>Project:</b>\r\n                      <br></br> {value.project}\r\n                    </div>\r\n                    <div>\r\n                      <b>Contract Number:</b>\r\n                      <br></br> {value.contract_number}\r\n                    </div>\r\n                    <div>\r\n                      <b>Foreman:</b>\r\n                      <br></br> {value.foreman}\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n\r\n                  <h3>Weather Delay</h3>\r\n                  <div\r\n                    style={{ backgroundColor: 'white' }}\r\n                    className=\"return sub-border\">\r\n                    {/* Used for all database responses that have to split\r\n                    name.split('\\n').map(str => <p>{str}</p>)\r\n                    Puts each entry on a new line\r\n                    Styling to split attr up so they're not on top of each other*/}\r\n                    <div style={{ width: '300px' }}>\r\n                      {weatherNotes.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Notes: </b>\r\n                          {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {weatherStart.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Start:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {weatherEnd.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>End:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <h3>Project Delay</h3>\r\n                  <div\r\n                    style={{ backgroundColor: 'white' }}\r\n                    className=\"return sub-border\">\r\n                    <div style={{ width: '300px' }}>\r\n                      {projectNotes.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Notes: </b>\r\n                          {str} <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {projectStart.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Start:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {projectEnd.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>End:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <h3>Employees and Hours</h3>\r\n                  <div\r\n                    style={{ backgroundColor: 'white' }}\r\n                    className=\"return sub-border\">\r\n                    <div style={{ width: '300px' }}>\r\n                      {employeeName.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Name: </b>\r\n                          {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {employeeHours.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Hours:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {jobNum.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Job Number:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <h3>Job Description</h3>\r\n                  <div\r\n                    style={{\r\n                      paddingBottom: '20px',\r\n                      paddingLeft: '10px',\r\n                      paddingTop: '10px',\r\n                      backgroundColor: 'white',\r\n                    }}\r\n                    className=\"sub-border\">\r\n                    {value.job_description}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth0(GetDailyJobReport);\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Forms.js",["136","137"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport './Forms.css';\r\nimport BackButton from './BackButton';\r\nimport axios from 'axios';\r\n\r\nconst Forms = () => {\r\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0();\r\n  let history = useHistory();\r\n\r\n  const getForms = async () => {\r\n    const token = await getAccessTokenSilently({\r\n      audience: 'http://localhost:5000/',\r\n      scope: 'view:forms',\r\n    });\r\n\r\n    axios\r\n      .get('http://localhost:5000/getforms', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          history.push('/wrongpermissions');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <div>\r\n        <div>\r\n          <BackButton path=\"/\" />\r\n        </div>\r\n        <div\r\n          style={{\r\n            backgroundColor: 'ghostwhite',\r\n            position: 'absolute',\r\n            left: '50%',\r\n            marginLeft: '-100px',\r\n            marginTop: '10px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            border: '2px solid black',\r\n            paddingBottom: '10px',\r\n            borderRadius: '5px',\r\n          }}>\r\n          <h1>Forms:</h1>\r\n          <h1\r\n            className=\"ui button\"\r\n            style={{\r\n              color: 'black',\r\n              backgroundColor: 'peachpuff',\r\n              width: '150px',\r\n              margin: '10px',\r\n              // fontSize: 'x-large',\r\n              border: '2px solid black',\r\n            }}>\r\n            <Link to=\"/createform\">Create Form</Link>\r\n          </h1>\r\n\r\n          <h1\r\n            className=\"ui button\"\r\n            style={{\r\n              color: 'black',\r\n              backgroundColor: 'peachpuff',\r\n              width: '150px',\r\n              marginLeft: '10px',\r\n              marginRight: '10px',\r\n              // fontSize: 'x-large',\r\n              border: '2px solid black',\r\n            }}>\r\n            <Link onClick={getForms} to=\"/viewform\">\r\n              View Form\r\n            </Link>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Loading.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LogoutButton.js",["138"],"import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LogoutButton = () => {\r\n  const { logout, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <a\r\n        onClick={() => logout({ returnTo: 'http://localhost:3000/logout' })}\r\n        className=\"button\">\r\n        Logout\r\n      </a>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LoginButton.js",["139"],"import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    !isAuthenticated && (\r\n      <a onClick={() => loginWithRedirect()} className=\"button\">\r\n        Log In\r\n      </a>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\DataSent.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\BackButton.js",["140"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from './arrow-left.svg';\r\n\r\nconst BackButton = (props) => {\r\n  return (\r\n    <Link to={props.path}>\r\n      <img\r\n        style={{\r\n          width: '25px',\r\n          margin: '10px',\r\n        }}\r\n        src={logo}\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\WrongPermissions.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":61,"column":13,"nodeType":"147","endLine":70,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":315,"column":19,"nodeType":"155","messageId":"156","endLine":315,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":316,"column":19,"nodeType":"155","messageId":"156","endLine":316,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":317,"column":23,"nodeType":"155","messageId":"156","endLine":317,"endColumn":25},{"ruleId":"153","severity":1,"message":"154","line":318,"column":19,"nodeType":"155","messageId":"156","endLine":318,"endColumn":21},{"ruleId":"148","severity":1,"message":"157","line":348,"column":11,"nodeType":"150","messageId":"151","endLine":348,"endColumn":15},{"ruleId":"148","severity":1,"message":"158","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":33},{"ruleId":"148","severity":1,"message":"159","line":1,"column":35,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"148","severity":1,"message":"160","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"161","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":415,"column":21,"nodeType":"155","messageId":"156","endLine":415,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":416,"column":19,"nodeType":"155","messageId":"156","endLine":416,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":417,"column":18,"nodeType":"155","messageId":"156","endLine":417,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":418,"column":18,"nodeType":"155","messageId":"156","endLine":418,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":419,"column":19,"nodeType":"155","messageId":"156","endLine":419,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":420,"column":18,"nodeType":"155","messageId":"156","endLine":420,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":263,"column":55,"nodeType":"155","messageId":"156","endLine":263,"endColumn":57},{"ruleId":"153","severity":1,"message":"154","line":271,"column":53,"nodeType":"155","messageId":"156","endLine":271,"endColumn":55},{"ruleId":"153","severity":1,"message":"162","line":272,"column":53,"nodeType":"155","messageId":"156","endLine":272,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":314,"column":57,"nodeType":"155","messageId":"156","endLine":314,"endColumn":59},{"ruleId":"153","severity":1,"message":"154","line":343,"column":57,"nodeType":"155","messageId":"156","endLine":343,"endColumn":59},{"ruleId":"153","severity":1,"message":"154","line":375,"column":57,"nodeType":"155","messageId":"156","endLine":375,"endColumn":59},{"ruleId":"148","severity":1,"message":"163","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":624,"column":19,"nodeType":"155","messageId":"156","endLine":624,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":625,"column":18,"nodeType":"155","messageId":"156","endLine":625,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":626,"column":18,"nodeType":"155","messageId":"156","endLine":626,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":627,"column":20,"nodeType":"155","messageId":"156","endLine":627,"endColumn":22},{"ruleId":"164","severity":1,"message":"165","line":181,"column":15,"nodeType":"166","messageId":"167","endLine":183,"endColumn":16},{"ruleId":"148","severity":1,"message":"163","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"159","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":9,"column":7,"nodeType":"147","endLine":11,"endColumn":28},{"ruleId":"168","severity":1,"message":"169","line":10,"column":7,"nodeType":"147","endLine":10,"endColumn":65},{"ruleId":"145","severity":1,"message":"146","line":8,"column":7,"nodeType":"147","endLine":14,"endColumn":9},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'DatePicker' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'date' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'pricing' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]