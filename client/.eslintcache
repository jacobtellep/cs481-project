[{"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\index.js":"1","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\App.js":"2","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\NavBar.js":"3","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\ProtectedRoute.js":"4","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\DailyJobReport.js":"5","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\GetDailyJobReport.js":"6","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Forms.js":"7","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\ViewForm.js":"8","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Logout.js":"9","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\CreateForm.js":"10","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Login.js":"11","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\JSAform.js":"12","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Pricing.js":"13","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\GetJSAform.js":"14","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\ViewPricing.js":"15","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Loading.js":"16","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\InspectionForm.js":"17","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\GetInspectionForm.js":"18","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\LogoutButton.js":"19","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\LoginButton.js":"20"},{"size":448,"mtime":1616452209545,"results":"21","hashOfConfig":"22"},{"size":2415,"mtime":1616452209495,"results":"23","hashOfConfig":"22"},{"size":732,"mtime":1616452209539,"results":"24","hashOfConfig":"22"},{"size":402,"mtime":1616452209542,"results":"25","hashOfConfig":"22"},{"size":24048,"mtime":1616452209506,"results":"26","hashOfConfig":"22"},{"size":8111,"mtime":1616456688004,"results":"27","hashOfConfig":"22"},{"size":670,"mtime":1616452209509,"results":"28","hashOfConfig":"22"},{"size":699,"mtime":1616452209543,"results":"29","hashOfConfig":"22"},{"size":166,"mtime":1616452209535,"results":"30","hashOfConfig":"22"},{"size":852,"mtime":1616452209502,"results":"31","hashOfConfig":"22"},{"size":162,"mtime":1616452209531,"results":"32","hashOfConfig":"22"},{"size":35039,"mtime":1616452209528,"results":"33","hashOfConfig":"22"},{"size":529,"mtime":1616452209540,"results":"34","hashOfConfig":"22"},{"size":15668,"mtime":1616452209519,"results":"35","hashOfConfig":"22"},{"size":366,"mtime":1616452209544,"results":"36","hashOfConfig":"22"},{"size":280,"mtime":1616452209529,"results":"37","hashOfConfig":"22"},{"size":47271,"mtime":1616452209524,"results":"38","hashOfConfig":"22"},{"size":17314,"mtime":1616452209517,"results":"39","hashOfConfig":"22"},{"size":393,"mtime":1616452209537,"results":"40","hashOfConfig":"22"},{"size":376,"mtime":1616452209532,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"f0q7wc",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\index.js",[],["89","90"],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\App.js",["91"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport DailyJobReport from './components/DailyJobReport';\r\nimport GetDailyJobReport from './components/GetDailyJobReport';\r\nimport NavBar from './components/NavBar';\r\nimport Forms from './components/Forms';\r\nimport CreateForm from './components/CreateForm';\r\nimport ViewForm from './components/ViewForm';\r\nimport Logout from './components/Logout';\r\nimport Login from './components/Login';\r\nimport Pricing from './components/Pricing';\r\nimport ViewPricing from './components/ViewPricing';\r\nimport JSAform from './components/JSAform';\r\nimport GetJSAform from './components/GetJSAform';\r\nimport Inspection from './components/InspectionForm';\r\nimport GetInspection from './components/GetInspectionForm';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Loading from './components/Loading';\r\nimport logo from './HGCARTE.jpg';\r\n\r\nconst App = () => {\r\n  const { isLoading } = useAuth0();\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <ProtectedRoute\r\n            path=\"/createdailyjobreport\"\r\n            component={DailyJobReport}\r\n          />\r\n          <ProtectedRoute\r\n            path=\"/getdailyjobreport\"\r\n            component={GetDailyJobReport}\r\n          />\r\n          <ProtectedRoute path=\"/createjobsafetyanalysis\" component={JSAform} />\r\n          <ProtectedRoute path=\"/getjobsafetyanalysis\" component={GetJSAform} />\r\n          <ProtectedRoute path=\"/createinspection\" component={Inspection} />\r\n          <ProtectedRoute path=\"/getinspection\" component={GetInspection} />\r\n          <ProtectedRoute path=\"/forms\" exact component={Forms} />\r\n          <ProtectedRoute path=\"/createform\" component={CreateForm} />\r\n          <ProtectedRoute path=\"/viewform\" component={ViewForm} />\r\n          <ProtectedRoute path=\"/pricing\" component={Pricing} />\r\n          <ProtectedRoute path=\"/viewpricing\" component={ViewPricing} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/\" exact>\r\n            <img style={{ padding: '10px', width: '100px' }} src={logo} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\NavBar.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\DailyJobReport.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\GetDailyJobReport.js",["92"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withAuth0 } from \"@auth0/auth0-react\";\r\nimport \"./GetDailyJobReport.css\";\r\n\r\nclass GetDailyJobReport extends React.Component {\r\n  state = {\r\n    date: \"\",\r\n    customer: \"\",\r\n    project: \"\",\r\n    contractNumber: \"\",\r\n    foreman: \"\",\r\n    weatherNotes: \"\",\r\n    weatherStart: \"\",\r\n    weatherEnd: \"\",\r\n    weatherNotes1: \"\",\r\n    weatherStart1: \"\",\r\n    weatherEnd1: \"\",\r\n    weatherNotes2: \"\",\r\n    weatherStart2: \"\",\r\n    weatherEnd2: \"\",\r\n    weatherNotes3: \"\",\r\n    weatherStart3: \"\",\r\n    weatherEnd3: \"\",\r\n    projectNotes: \"\",\r\n    projectStart: \"\",\r\n    projectEnd: \"\",\r\n    projectNotes1: \"\",\r\n    projectStart1: \"\",\r\n    projectEnd1: \"\",\r\n    projectNotes2: \"\",\r\n    projectStart2: \"\",\r\n    projectEnd2: \"\",\r\n    projectNotes3: \"\",\r\n    projectStart3: \"\",\r\n    projectEnd3: \"\",\r\n    employeeName: \"\",\r\n    hours: \"\",\r\n    jobNumber: \"\",\r\n    employeeName1: \"\",\r\n    hours1: \"\",\r\n    jobNumber1: \"\",\r\n    employeeName2: \"\",\r\n    hours2: \"\",\r\n    jobNumber2: \"\",\r\n    employeeName3: \"\",\r\n    hours3: \"\",\r\n    jobNumber3: \"\",\r\n    employeeName4: \"\",\r\n    hours4: \"\",\r\n    jobNumber4: \"\",\r\n    employeeName5: \"\",\r\n    hours5: \"\",\r\n    jobNumber5: \"\",\r\n    employeeName6: \"\",\r\n    hours6: \"\",\r\n    jobNumber6: \"\",\r\n    employeeName7: \"\",\r\n    hours7: \"\",\r\n    jobNumber7: \"\",\r\n    jobDescription: \"\",\r\n    selectValue: \"\",\r\n    contract_nums: [],\r\n\r\n    dailyJobReport: [],\r\n  };\r\n\r\n  //same functions you created\r\n  getDailyJobReport = async () => {\r\n    const { getAccessTokenSilently } = this.props.auth0;\r\n    const token = await getAccessTokenSilently({\r\n      audience: \"http://localhost:5000/\",\r\n      scope: \"view:forms\",\r\n    });\r\n\r\n    axios\r\n      .get(\"http://localhost:5000/dailyjobreport\", {\r\n        params: { id: this.state.selectValue },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ GetDailyJobReport: response.data }); // the auto-incremented sql id is included in this response.data object\r\n\r\n        console.log(response.data);\r\n        console.log(\"successfully retrieved the data\");\r\n      });\r\n  };\r\n\r\n  getDailyJobReportID = () => {\r\n    axios.get(\"http://localhost:5000/dailyjobreport_id\").then((response) => {\r\n      if (response && response.data)\r\n        this.setState({ contract_nums: response.data });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", this.getDailyJobReportID());\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  };\r\n\r\n  retrieveClick = () => {\r\n    this.getDailyJobReport(this.state.GetDailyJobReport);\r\n  };\r\n\r\n  render() {\r\n    const renderDrop = () => {\r\n      return (\r\n        <select value={this.state.selectValue} onChange={this.handleChange}>\r\n          {this.state.contract_nums.map((str) => (\r\n            <option value={str.contract_number}>{str.contract_number}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <b>Select Contract Number</b>\r\n        {renderDrop()}\r\n\r\n        <button\r\n          onClick={this.getDailyJobReport}\r\n          className=\"retrieve-button\"\r\n          type=\"button\"\r\n        >\r\n          Retrieve\r\n        </button>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {/* && operator, kind of like using an if statement, will ignore any null values and stills render */}\r\n        {this.state.GetDailyJobReport &&\r\n          this.state.GetDailyJobReport.map((value, index) => {\r\n            {\r\n              /* Created variables to help format and split*/\r\n            }\r\n            const weatherNotes = value.weather_delay_notes;\r\n            const weatherStart = value.weather_delay_start;\r\n            const weatherEnd = value.weather_delay_end;\r\n\r\n            const projectNotes = value.project_delay_notes;\r\n            const projectStart = value.project_delay_start;\r\n            const projectEnd = value.project_delay_end;\r\n\r\n            const employeeName = value.employee_name;\r\n            const employeeHours = value.hours;\r\n            const jobNum = value.job_number;\r\n\r\n            return (\r\n              <div className=\"retrieve-report\" key={index}>\r\n                <h1>Daily Job Report</h1>\r\n                <div>\r\n                  <b>Date:</b> <br></br> {value.date}\r\n                </div>\r\n                <div>\r\n                  <b>Customer:</b>\r\n                  <br></br> {value.customer}\r\n                </div>\r\n                <div>\r\n                  <b>Project:</b>\r\n                  <br></br> {value.project}\r\n                </div>\r\n                <div>\r\n                  <b>Contract Number:</b>\r\n                  <br></br> {value.contract_number}\r\n                </div>\r\n                <div>\r\n                  <b>Foreman:</b>\r\n                  <br></br> {value.foreman}\r\n                </div>\r\n                <br />\r\n\r\n                <h3>Weather Delay</h3>\r\n                <div className=\"return\">\r\n                  {/* Used for all database responses that have to split\r\n                    name.split('\\n').map(str => <p>{str}</p>)\r\n                    Puts each entry on a new line\r\n                    Styling to split attr up so they're not on top of each other*/}\r\n                  <div>\r\n                    {weatherNotes.split(\"\\n\").map((str) => (\r\n                      <p>{str}</p>\r\n                    ))}\r\n                  </div>\r\n                  <div style={{ paddingLeft: \"100px\" }}>\r\n                    {weatherStart.split(\"\\n\").map((str) => (\r\n                      <p>\r\n                        <b>Start:</b> {str}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                  <div style={{ paddingLeft: \"15px\" }}>\r\n                    {weatherEnd.split(\"\\n\").map((str) => (\r\n                      <p>\r\n                        <b>End:</b> {str}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <br />\r\n                <h3>Project Delay</h3>\r\n                <div className=\"return\">\r\n                  <div>\r\n                    {projectNotes.split(\"\\n\").map((str) => (\r\n                      <p>{str}</p>\r\n                    ))}\r\n                  </div>\r\n                  <div style={{ paddingLeft: \"100px\" }}>\r\n                    {projectStart.split(\"\\n\").map((str) => (\r\n                      <p>\r\n                        <b>Start:</b> {str}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                  <div style={{ paddingLeft: \"15px\" }}>\r\n                    {projectEnd.split(\"\\n\").map((str) => (\r\n                      <p>\r\n                        <b>End:</b> {str}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <br />\r\n                <h3>Employees and Hours</h3>\r\n                <div className=\"return\">\r\n                  <div>\r\n                    {employeeName.split(\"\\n\").map((str) => (\r\n                      <p>{str}</p>\r\n                    ))}\r\n                  </div>\r\n                  <div style={{ paddingLeft: \"100px\" }}>\r\n                    {employeeHours.split(\"\\n\").map((str) => (\r\n                      <p>\r\n                        <b>Hours:</b> {str}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                  <div style={{ paddingLeft: \"15px\" }}>\r\n                    {jobNum.split(\"\\n\").map((str) => (\r\n                      <p>\r\n                        <b>Job Number:</b> {str}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <br />\r\n                <h3>Job Description</h3>\r\n                <div style={{ paddingBottom: \"20px\" }}>\r\n                  {value.job_description}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth0(GetDailyJobReport);\r\n","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Forms.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\ViewForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Logout.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\CreateForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Login.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\JSAform.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Pricing.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\GetJSAform.js",["93","94","95","96","97","98"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\n\r\nclass GetJSAform extends React.Component {\r\n  state = {\r\n    ticket_num: '',\r\n    date: '',\r\n    company: '',\r\n    representative: '',\r\n    location: '',\r\n    well_num: '',\r\n    afe_num: '',\r\n    weahter: '',\r\n    jsa_current_temp: '',\r\n    weather_sun: 'false',\r\n    weather_rain: 'false',\r\n    weather_overcast: 'false',\r\n    weather_windy: 'false',\r\n    weather_hail: 'false',\r\n    weather_snow: 'false',\r\n    major_steps1: '',\r\n    major_steps2: '',\r\n    major_steps3: '',\r\n    major_steps4: '',\r\n    major_steps5: '',\r\n    major_steps6: '',\r\n    major_steps7: '',\r\n    potential_hazards1: '',\r\n    potential_hazards2: '',\r\n    potential_hazards3: '',\r\n    potential_hazards4: '',\r\n    potential_hazards5: '',\r\n    potential_hazards6: '',\r\n    potential_hazards7: '',\r\n    recommendations1: '',\r\n    recommendations2: '',\r\n    recommendations3: '',\r\n    recommendations4: '',\r\n    recommendations5: '',\r\n    recommendations6: '',\r\n    recommendations7: '',\r\n    emergencyAddress: '',\r\n    medicalFacility: '',\r\n    hazard_1: '',\r\n    hazard_2: '',\r\n    hazard_3: '',\r\n    hazard_confinedSpace: 'false',\r\n    hazard_fall: 'false',\r\n    hazard_sharp: 'false',\r\n    hazard_electric: 'false',\r\n    hazard_irritants: 'false',\r\n    hazard_extremes: 'false',\r\n    hazard_pinch_crush: 'false',\r\n    hazard_lifting: 'false',\r\n    hazard_shortService: 'false',\r\n    hazard_explosion: 'false',\r\n    hazard_energy: 'false',\r\n    hazard_stop: 'false',\r\n    hazard_elevated: 'false',\r\n    hazard_excavation: 'false',\r\n    hazard_chemical: 'false',\r\n    hazard_noise: 'false',\r\n    hazard_water: 'false',\r\n    print_name1: '',\r\n    employee_initals1: '',\r\n    print_name2: '',\r\n    employee_initals2: '',\r\n    print_name3: '',\r\n    employee_initals3: '',\r\n    print_name4: '',\r\n    employee_initals4: '',\r\n    print_name5: '',\r\n    employee_initals5: '',\r\n    print_name6: '',\r\n    employee_initals6: '',\r\n    print_name7: '',\r\n    employee_initals7: '',\r\n    print_name8: '',\r\n    employee_initals8: '',\r\n    print_name9: '',\r\n    employee_initals9: '',\r\n    print_name10: '',\r\n    employee_initals10: '',\r\n    ticket_numbers: [],\r\n    selectValue: '',\r\n  };\r\n\r\n  getjsaform = async () => {\r\n    const { getAccessTokenSilently } = this.props.auth0;\r\n    const token = await getAccessTokenSilently({\r\n      audience: 'http://localhost:5000/',\r\n      scope: 'view:forms',\r\n    });\r\n\r\n    axios\r\n      .get('http://localhost:5000/jsaform', {\r\n        params: { id: this.state.selectValue },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ GetJSAform: response.data }); // the auto-incremented sql id is included in this response.data object\r\n\r\n        console.log('successfully retrieved the data');\r\n      });\r\n  };\r\n\r\n  getjsaform_id = () => {\r\n    axios.get('http://localhost:5000/jsaform_ticket').then((response) => {\r\n      this.setState({ ticket_numbers: response.data }); // the auto-incremented sql id is included in this response.data object\r\n\r\n      console.log('successfully retrieved the data');\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', this.getjsaform_id());\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  };\r\n\r\n  retrieveClick = () => {\r\n    this.getjsaform(this.state.GetJSAform);\r\n  };\r\n\r\n  render() {\r\n    const renderDrop = () => {\r\n      return (\r\n        <select value={this.state.selectValue} onChange={this.handleChange}>\r\n          {this.state.ticket_numbers.map((str) => (\r\n            <option value={str.ticket_num}>{str.ticket_num}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <b>Select Ticket Number</b>\r\n        {renderDrop()}\r\n        <button\r\n          onClick={this.getjsaform}\r\n          className=\"retrieve-button\"\r\n          type=\"button\">\r\n          Retrieve\r\n        </button>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n\r\n        {/* && operator, kind of like using an if statement, will ignore any null values and stills render */}\r\n        {this.state.GetJSAform &&\r\n          this.state.GetJSAform.map((value, index) => {\r\n            /* Created variables to help format and split*/\r\n            const weather = value.weather_id.split('\\n');\r\n\r\n            const hazard_1 = value.hazard_1.split('\\n');\r\n            const hazard_2 = value.hazard_2.split('\\n');\r\n            const hazard_3 = value.hazard_3.split('\\n');\r\n\r\n            const majorSteps = value.major_steps;\r\n            const potentialHazard = value.potential_hazard;\r\n            const recommHazard = value.remove_hazard;\r\n\r\n            const employeeName = value.user_id;\r\n            const employeeInitals = value.signatures;\r\n\r\n            return (\r\n              <div className=\"retrieve-report\" key={index}>\r\n                <h1>JSA Form</h1>\r\n\r\n                <h3>Job Info</h3>\r\n                <div\r\n                  className=\"jsa-info-weather\"\r\n                  style={{ display: 'flex', flexDirection: 'row' }}>\r\n                  <div>\r\n                    <div>\r\n                      <b>Ticket Number: </b>\r\n                      {value.ticket_num}\r\n                    </div>\r\n                    <div>\r\n                      <b>Date: </b>\r\n                      {value.date}\r\n                    </div>\r\n                    <div>\r\n                      <b>Company: </b>\r\n                      {value.company}\r\n                    </div>\r\n                    <div>\r\n                      <b>representative: </b>\r\n                      {value.representative}\r\n                    </div>\r\n                    <div>\r\n                      <b>location: </b>\r\n                      {value.location}\r\n                    </div>\r\n                    <div>\r\n                      <b>Well Number: </b>\r\n                      {value.well_num}\r\n                    </div>\r\n                    <div>\r\n                      <b>AFE Number: </b>\r\n                      {value.afe_num}\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      paddingLeft: '100px',\r\n                    }}>\r\n                    {weather.map((str) => {\r\n                      if (String(str).toLowerCase() == 'true')\r\n                        return (\r\n                          <div style={{ paddingBottom: '1px' }}>\r\n                            {' '}\r\n                            <input type=\"checkbox\" checked={true} />\r\n                          </div>\r\n                        );\r\n                      else if (\r\n                        String(str).toLowerCase() == 'true' ||\r\n                        String(str).toLowerCase() != 'false'\r\n                      )\r\n                        return (\r\n                          <div style={{ paddingBottom: '1px' }}> {str}</div>\r\n                        );\r\n                      return (\r\n                        <div style={{ paddingBottom: '1px' }}>\r\n                          {' '}\r\n                          <input type=\"checkbox\" checked={false} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <div>Sun</div>\r\n                    <div>Rain</div>\r\n                    <div>Overcast</div>\r\n                    <div>Windy</div>\r\n                    <div>Hail</div>\r\n                    <div style={{ paddingBottom: '1px' }}>Snow</div>\r\n                    <div style={{ paddingTop: '3px' }}>F Temp</div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"jsa-gps-medical\">\r\n                  <div>\r\n                    <b>Medical Facility: </b>\r\n                    {value.gps_location}\r\n                  </div>\r\n                  <div>\r\n                    <b>Emergency Address GPS: </b>\r\n                    {value.emergency_address}\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <h3>Hazards</h3>\r\n                <div\r\n                  className=\"hazardCheck\"\r\n                  style={{ display: 'flex', flexDirection: 'row' }}>\r\n                  <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    {hazard_1.map((str) => {\r\n                      if (String(str).toLowerCase() == 'true')\r\n                        return (\r\n                          <div style={{ paddingBottom: '1px' }}>\r\n                            <input type=\"checkbox\" checked={true} />\r\n                          </div>\r\n                        );\r\n                      return (\r\n                        <div style={{ paddingBottom: '1px' }}>\r\n                          <input type=\"checkbox\" checked={false} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <div>Confined Space</div>\r\n                    <div>Fall Protection</div>\r\n                    <div>Sharp/Hot/Cold Surfaces</div>\r\n                    <div>Electric Shock Hazard</div>\r\n                    <div>Irritants-Respiratory/Skin</div>\r\n                    <div>Environment Extremes</div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      paddingLeft: '20px',\r\n                    }}>\r\n                    {hazard_2.map((str) => {\r\n                      if (String(str).toLowerCase() == 'true')\r\n                        return (\r\n                          <div style={{ paddingBottom: '1px' }}>\r\n                            <input type=\"checkbox\" checked={true} />\r\n                          </div>\r\n                        );\r\n                      return (\r\n                        <div style={{ paddingBottom: '1px' }}>\r\n                          <input type=\"checkbox\" checked={false} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <div>Pinch/Crush/Strike Hazard</div>\r\n                    <div>Lifting Hazard</div>\r\n                    <div>Short Services Employees</div>\r\n                    <div>Fore or Explosion Potential</div>\r\n                    <div>Potential Release of Energy</div>\r\n                    <div>\r\n                      We ALL have the right and obligation to STOP WORK if\r\n                      unsafe conditions or acts are present\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      position: 'relative',\r\n                      left: '-450px',\r\n                    }}>\r\n                    {hazard_3.map((str) => {\r\n                      if (String(str).toLowerCase() == 'true')\r\n                        return (\r\n                          <div style={{ paddingBottom: '1px' }}>\r\n                            <input type=\"checkbox\" checked={true} />\r\n                          </div>\r\n                        );\r\n                      return (\r\n                        <div style={{ paddingBottom: '1px' }}>\r\n                          <input type=\"checkbox\" checked={false} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      position: 'relative',\r\n                      left: '-450px',\r\n                    }}>\r\n                    <div>Elevated Work Load</div>\r\n                    <div>Excavation</div>\r\n                    <div>Hazardous Chemical Exposure</div>\r\n                    <div>High Noise Level</div>\r\n                    <div>Water or Drowning Hazard</div>\r\n                  </div>\r\n                </div>\r\n                <br />\r\n                <div\r\n                  className=\"steps-Consquences-remove\"\r\n                  style={{ display: 'flex', flexDirection: 'row' }}>\r\n                  <div>\r\n                    <h3>Major Steps</h3>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        paddingLeft: '20px',\r\n                      }}>\r\n                      {majorSteps.split('\\n').map((str) => (\r\n                        <p>{str}</p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ paddingLeft: '20px' }}>\r\n                    <h3>Potential Hazards/Consquences</h3>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        paddingLeft: '20px',\r\n                      }}>\r\n                      {potentialHazard.split('\\n').map((str) => (\r\n                        <p>{str}</p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ paddingLeft: '20px' }}>\r\n                    <h3>Recommendations to Remove Hazard</h3>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        paddingLeft: '20px',\r\n                      }}>\r\n                      {recommHazard.split('\\n').map((str) => (\r\n                        <p>{str}</p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <h3>\r\n                  All Contractors and/or Personnel must read and sign this JSA\r\n                  form to work on or around G L Services area of Operations.{' '}\r\n                  <br /> DO NOT sign this form if you have not read and FULLY\r\n                  understand the activities that G L Services is engaged in\r\n                  <br />\r\n                  and that you are participating in.\r\n                </h3>\r\n\r\n                <div\r\n                  className=\"employeesAndInitials\"\r\n                  style={{ display: 'flex', flexDirection: 'row' }}>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      paddingLeft: '20px',\r\n                    }}>\r\n                    <h3>Employee Name</h3>\r\n                    {employeeName.split('\\n').map((str) => (\r\n                      <p>{str}</p>\r\n                    ))}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      paddingLeft: '20px',\r\n                    }}>\r\n                    <h3>Employee Initals</h3>\r\n                    {employeeInitals.split('\\n').map((str) => (\r\n                      <p>{str}</p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth0(GetJSAform);\r\n","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\ViewPricing.js",["99","100","101","102"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ViewPricing = () => {\r\n  return (\r\n    <select>\r\n      <option value=\"Luke Skywalker\">Luke Skywalker</option>\r\n      <option value=\"C-3PO\">C-3PO</option>\r\n      <option value=\"R2-D2\">R2-D2</option>\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default ViewPricing;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\Loading.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\InspectionForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\GetInspectionForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\LogoutButton.js",["103"],"import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LogoutButton = () => {\r\n  const { logout, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <a\r\n        onClick={() => logout({ returnTo: 'http://localhost:3000/logout' })}\r\n        className=\"button\">\r\n        Logout\r\n      </a>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\jake-code\\cs481-project\\client\\src\\components\\LoginButton.js",["104"],"import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    !isAuthenticated && (\r\n      <a onClick={() => loginWithRedirect()} className=\"button\">\r\n        Log In\r\n      </a>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":54,"column":13,"nodeType":"111","endLine":54,"endColumn":75},{"ruleId":"112","severity":1,"message":"113","line":140,"column":13,"nodeType":"114","messageId":"115","endLine":142,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":217,"column":53,"nodeType":"118","messageId":"119","endLine":217,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":225,"column":51,"nodeType":"118","messageId":"119","endLine":225,"endColumn":53},{"ruleId":"116","severity":1,"message":"120","line":226,"column":51,"nodeType":"118","messageId":"119","endLine":226,"endColumn":53},{"ruleId":"116","severity":1,"message":"117","line":267,"column":53,"nodeType":"118","messageId":"119","endLine":267,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":296,"column":53,"nodeType":"118","messageId":"119","endLine":296,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":329,"column":53,"nodeType":"118","messageId":"119","endLine":329,"endColumn":55},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"125","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":33},{"ruleId":"121","severity":1,"message":"126","line":1,"column":35,"nodeType":"123","messageId":"124","endLine":1,"endColumn":44},{"ruleId":"121","severity":1,"message":"127","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":9,"column":7,"nodeType":"111","endLine":11,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":10,"column":7,"nodeType":"111","endLine":10,"endColumn":65},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]