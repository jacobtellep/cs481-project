[{"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\index.js":"1","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\App.js":"2","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Logout.js":"3","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\NavBar.js":"4","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\DailyJobReport.js":"5","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ProtectedRoute.js":"6","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Login.js":"7","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Pricing.js":"8","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewPricing.js":"9","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\JSAform.js":"10","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetJSAform.js":"11","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\InspectionForm.js":"12","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetInspectionForm.js":"13","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\CreateForm.js":"14","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetDailyJobReport.js":"15","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Forms.js":"16","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewForm.js":"17","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Loading.js":"18","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LogoutButton.js":"19","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LoginButton.js":"20"},{"size":448,"mtime":1617063898666,"results":"21","hashOfConfig":"22"},{"size":2617,"mtime":1617249920306,"results":"23","hashOfConfig":"22"},{"size":155,"mtime":1615429406267,"results":"24","hashOfConfig":"22"},{"size":724,"mtime":1617064489974,"results":"25","hashOfConfig":"22"},{"size":23328,"mtime":1617290856104,"results":"26","hashOfConfig":"22"},{"size":387,"mtime":1615429406342,"results":"27","hashOfConfig":"22"},{"size":151,"mtime":1615429406220,"results":"28","hashOfConfig":"22"},{"size":505,"mtime":1615429406327,"results":"29","hashOfConfig":"22"},{"size":352,"mtime":1615429406373,"results":"30","hashOfConfig":"22"},{"size":35340,"mtime":1617292987150,"results":"31","hashOfConfig":"22"},{"size":17067,"mtime":1617293682959,"results":"32","hashOfConfig":"22"},{"size":47271,"mtime":1617063898662,"results":"33","hashOfConfig":"22"},{"size":17314,"mtime":1617063898660,"results":"34","hashOfConfig":"22"},{"size":1651,"mtime":1617247235984,"results":"35","hashOfConfig":"22"},{"size":10657,"mtime":1617249787743,"results":"36","hashOfConfig":"22"},{"size":1452,"mtime":1617247432975,"results":"37","hashOfConfig":"22"},{"size":1451,"mtime":1617247323113,"results":"38","hashOfConfig":"22"},{"size":280,"mtime":1617063898663,"results":"39","hashOfConfig":"22"},{"size":393,"mtime":1616272710775,"results":"40","hashOfConfig":"22"},{"size":376,"mtime":1617063898664,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1sq99px",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\index.js",[],["87","88"],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\App.js",["89"],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Logout.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\NavBar.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\DailyJobReport.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Login.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Pricing.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewPricing.js",["90","91","92","93"],"import React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ViewPricing = () => {\n  return (\n    <select>\n      <option value=\"Luke Skywalker\">Luke Skywalker</option>\n      <option value=\"C-3PO\">C-3PO</option>\n      <option value=\"R2-D2\">R2-D2</option>\n    </select>\n  );\n};\n\nexport default ViewPricing;\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\JSAform.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetJSAform.js",["94","95","96","97","98","99"],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\InspectionForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetInspectionForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\CreateForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\GetDailyJobReport.js",["100"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport './GetDailyJobReport.css';\r\n\r\nclass GetDailyJobReport extends React.Component {\r\n  state = {\r\n    date: '',\r\n    customer: '',\r\n    project: '',\r\n    contractNumber: '',\r\n    foreman: '',\r\n    weatherNotes: '',\r\n    weatherStart: '',\r\n    weatherEnd: '',\r\n    weatherNotes1: '',\r\n    weatherStart1: '',\r\n    weatherEnd1: '',\r\n    weatherNotes2: '',\r\n    weatherStart2: '',\r\n    weatherEnd2: '',\r\n    weatherNotes3: '',\r\n    weatherStart3: '',\r\n    weatherEnd3: '',\r\n    projectNotes: '',\r\n    projectStart: '',\r\n    projectEnd: '',\r\n    projectNotes1: '',\r\n    projectStart1: '',\r\n    projectEnd1: '',\r\n    projectNotes2: '',\r\n    projectStart2: '',\r\n    projectEnd2: '',\r\n    projectNotes3: '',\r\n    projectStart3: '',\r\n    projectEnd3: '',\r\n    employeeName: '',\r\n    hours: '',\r\n    jobNumber: '',\r\n    employeeName1: '',\r\n    hours1: '',\r\n    jobNumber1: '',\r\n    employeeName2: '',\r\n    hours2: '',\r\n    jobNumber2: '',\r\n    employeeName3: '',\r\n    hours3: '',\r\n    jobNumber3: '',\r\n    employeeName4: '',\r\n    hours4: '',\r\n    jobNumber4: '',\r\n    employeeName5: '',\r\n    hours5: '',\r\n    jobNumber5: '',\r\n    employeeName6: '',\r\n    hours6: '',\r\n    jobNumber6: '',\r\n    employeeName7: '',\r\n    hours7: '',\r\n    jobNumber7: '',\r\n    jobDescription: '',\r\n    selectValue: '',\r\n    contract_nums: [],\r\n\r\n    dailyJobReport: [],\r\n  };\r\n\r\n  //same functions you created\r\n  getDailyJobReport = async () => {\r\n    const { getAccessTokenSilently } = this.props.auth0;\r\n    const token = await getAccessTokenSilently({\r\n      audience: 'http://localhost:5000/',\r\n      scope: 'view:forms',\r\n    });\r\n\r\n    axios\r\n      .get('http://localhost:5000/dailyjobreport', {\r\n        params: { id: this.state.selectValue },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ GetDailyJobReport: response.data }); // the auto-incremented sql id is included in this response.data object\r\n\r\n        console.log(response.data);\r\n        console.log('successfully retrieved the data');\r\n      });\r\n  };\r\n\r\n  getDailyJobReportID = () => {\r\n    axios.get('http://localhost:5000/dailyjobreport_id').then((response) => {\r\n      if (response && response.data)\r\n        this.setState({ contract_nums: response.data });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('load', this.getDailyJobReportID());\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  };\r\n\r\n  retrieveClick = () => {\r\n    this.getDailyJobReport(this.state.GetDailyJobReport);\r\n  };\r\n\r\n  render() {\r\n    const renderDrop = () => {\r\n      return (\r\n        <select value={this.state.selectValue} onChange={this.handleChange}>\r\n          {this.state.contract_nums.map((str) => (\r\n            <option value={str.contract_number}>{str.contract_number}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: '25%',\r\n          marginLeft: '-120px',\r\n          marginTop: '10px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          width: '600px',\r\n          paddingBottom: '10px',\r\n        }}>\r\n        <div>\r\n          <b>Select Contract Number</b>\r\n          {renderDrop()}\r\n\r\n          <button\r\n            onClick={this.getDailyJobReport}\r\n            className=\"ui button\"\r\n            type=\"button\"\r\n            style={{\r\n              color: 'black',\r\n              backgroundColor: 'peachpuff',\r\n              width: '100px',\r\n              margin: '10px',\r\n              border: '2px solid black',\r\n            }}>\r\n            Retrieve\r\n          </button>\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div>\r\n          {/* && operator, kind of like using an if statement, will ignore any null values and stills render */}\r\n          {this.state.GetDailyJobReport &&\r\n            this.state.GetDailyJobReport.map((value, index) => {\r\n              {\r\n                /* Created variables to help format and split*/\r\n              }\r\n              const weatherNotes = value.weather_delay_notes;\r\n              const weatherStart = value.weather_delay_start;\r\n              const weatherEnd = value.weather_delay_end;\r\n\r\n              const projectNotes = value.project_delay_notes;\r\n              const projectStart = value.project_delay_start;\r\n              const projectEnd = value.project_delay_end;\r\n\r\n              const employeeName = value.employee_name;\r\n              const employeeHours = value.hours;\r\n              const jobNum = value.job_number;\r\n\r\n              return (\r\n                <div\r\n                  style={{ backgroundColor: 'ghostwhite' }}\r\n                  className=\"retrieve-report border\"\r\n                  key={index}>\r\n                  <h1>Daily Job Report</h1>\r\n                  <div\r\n                    style={{\r\n                      paddingLeft: '10px',\r\n                      backgroundColor: 'white',\r\n                      paddingRight: '10px',\r\n                    }}\r\n                    className=\"sub-border\">\r\n                    <div>\r\n                      <b>Date:</b> <br></br> {value.date}\r\n                      <hr></hr>\r\n                    </div>\r\n                    <div>\r\n                      <b>Customer:</b>\r\n                      <br></br> {value.customer}\r\n                      <hr></hr>\r\n                    </div>\r\n                    <div>\r\n                      <b>Project:</b>\r\n                      <br></br> {value.project}\r\n                      <hr></hr>\r\n                    </div>\r\n                    <div>\r\n                      <b>Contract Number:</b>\r\n                      <br></br> {value.contract_number}\r\n                      <hr></hr>\r\n                    </div>\r\n                    <div>\r\n                      <b>Foreman:</b>\r\n                      <br></br> {value.foreman}\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n\r\n                  <h3>Weather Delay</h3>\r\n                  <div\r\n                    style={{ backgroundColor: 'white' }}\r\n                    className=\"return sub-border\">\r\n                    {/* Used for all database responses that have to split\r\n                    name.split('\\n').map(str => <p>{str}</p>)\r\n                    Puts each entry on a new line\r\n                    Styling to split attr up so they're not on top of each other*/}\r\n                    <div style={{ width: '300px' }}>\r\n                      {weatherNotes.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Notes: </b>\r\n                          {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {weatherStart.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Start:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {weatherEnd.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>End:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <h3>Project Delay</h3>\r\n                  <div\r\n                    style={{ backgroundColor: 'white' }}\r\n                    className=\"return sub-border\">\r\n                    <div style={{ width: '300px' }}>\r\n                      {projectNotes.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Notes: </b>\r\n                          {str} <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {projectStart.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Start:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {projectEnd.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>End:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <h3>Employees and Hours</h3>\r\n                  <div\r\n                    style={{ backgroundColor: 'white' }}\r\n                    className=\"return sub-border\">\r\n                    <div style={{ width: '300px' }}>\r\n                      {employeeName.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Name: </b>\r\n                          {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {employeeHours.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Hours:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ width: '120px' }}>\r\n                      {jobNum.split('\\n').map((str) => (\r\n                        <p>\r\n                          <b>Job Number:</b> {str}\r\n                          <hr></hr>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <h3>Job Description</h3>\r\n                  <div\r\n                    style={{\r\n                      paddingBottom: '20px',\r\n                      paddingLeft: '10px',\r\n                      paddingTop: '10px',\r\n                      backgroundColor: 'white',\r\n                    }}\r\n                    className=\"sub-border\">\r\n                    {value.job_description}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth0(GetDailyJobReport);\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Forms.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\ViewForm.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\Loading.js",[],"C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LogoutButton.js",["101"],"import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LogoutButton = () => {\r\n  const { logout, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <a\r\n        onClick={() => logout({ returnTo: 'http://localhost:3000/logout' })}\r\n        className=\"button\">\r\n        Logout\r\n      </a>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","C:\\Users\\jjtel\\Documents\\CS481\\cs481-project\\client\\src\\components\\LoginButton.js",["102"],"import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    !isAuthenticated && (\r\n      <a onClick={() => loginWithRedirect()} className=\"button\">\r\n        Log In\r\n      </a>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":54,"column":13,"nodeType":"109","endLine":63,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"114","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},{"ruleId":"110","severity":1,"message":"115","line":1,"column":35,"nodeType":"112","messageId":"113","endLine":1,"endColumn":44},{"ruleId":"110","severity":1,"message":"116","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":238,"column":53,"nodeType":"119","messageId":"120","endLine":238,"endColumn":55},{"ruleId":"117","severity":1,"message":"118","line":246,"column":51,"nodeType":"119","messageId":"120","endLine":246,"endColumn":53},{"ruleId":"117","severity":1,"message":"121","line":247,"column":51,"nodeType":"119","messageId":"120","endLine":247,"endColumn":53},{"ruleId":"117","severity":1,"message":"118","line":289,"column":55,"nodeType":"119","messageId":"120","endLine":289,"endColumn":57},{"ruleId":"117","severity":1,"message":"118","line":318,"column":55,"nodeType":"119","messageId":"120","endLine":318,"endColumn":57},{"ruleId":"117","severity":1,"message":"118","line":350,"column":55,"nodeType":"119","messageId":"120","endLine":350,"endColumn":57},{"ruleId":"122","severity":1,"message":"123","line":160,"column":15,"nodeType":"124","messageId":"125","endLine":162,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":9,"column":7,"nodeType":"109","endLine":11,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":10,"column":7,"nodeType":"109","endLine":10,"endColumn":65},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]